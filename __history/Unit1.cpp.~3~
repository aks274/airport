// ---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop
#include "Unit2.h"
#include "Unit1.h"
// ---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;

vector<staff>crew;
int iMax = 0, iCur = 0;

// ---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner) : TForm(Owner) {
}

// ---------------------------------------------------------------------------
void __fastcall TForm1::Exit1Click(TObject *Sender) {
	Form1->Close();
	Form2->Close();
}

// ---------------------------------------------------------------------------
void __fastcall TForm1::OpenAs1Click(TObject *Sender) {
	OpenDialog1->Execute();

	FILE *f = fopen(AnsiString(OpenDialog1->FileName).c_str(), "rb");
	if (f == 0) {
		ShowMessage("Ошибка файла!");
		return;
	}

	crew.clear();

	for (int i = 0; i < crew.max_size(); i++) {
		staff s;
		fread(&s, sizeof(staff), 1, f);
		if (feof(f))
			break;
		crew.push_back(s);
	}
	fclose(f);
	iMax = crew.size();
	iCur = 0;
	ShowRecord();
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::SaveAs1Click(TObject *Sender) {
	SaveDialog1->Execute();
	FILE *f = fopen(AnsiString(SaveDialog1->FileName).c_str(), "wb");
	if (f)
		fwrite(&crew[0], sizeof(staff), iMax, f);
	else
		ShowMessage("Ошибка файла");
	fclose(f);
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::ButtonAddClick(TObject *Sender) {
 	crew.push_back(staff());
	AnsiString C = EditCompany->Text;
	AnsiString A = EditAirbus->Text;
	AnsiString Co = EditCountry->Text;
	AnsiString Ci = EditCity->Text;
	AnsiString pr = EditCost->Text;
	strcpy(crew[iMax].company, ((AnsiString)EditCompany->Text).c_str());
	strcpy(crew[iMax].airbus, ((AnsiString)EditAirbus->Text).c_str());
	strcpy(crew[iMax].country, ((AnsiString)EditCountry->Text).c_str());
	strcpy(crew[iMax].city, ((AnsiString)EditCity->Text).c_str());
	crew[iMax].cost = EditCost->Text.ToIntDef(0);
	if (C.Length() == 0 || A.Length() == 0 || Co.Length() == 0 ||
		Ci.Length() == 0 || pr.Length() == 0) {
		ShowMessage("Введите значения!");
	}
	else {
		ShowMessage("Запись добавлена!");
		iCur = iMax;
		iMax++;
		LabelNum->Caption = IntToStr(iMax);
	}

}

// ---------------------------------------------------------------------------
void __fastcall TForm1::ShowRecord() {
	EditCompany->Text = crew[iCur].company;
	EditAirbus->Text = crew[iCur].airbus;
	EditCountry->Text = crew[iCur].country;
	EditCity->Text = crew[iCur].city;
	EditCost->Text = IntToStr(crew[iCur].cost);
	LabelNum->Caption = IntToStr(iCur + 1);

}

// ---------------------------------------------------------------------------
void __fastcall TForm1::ButtonPrevClick(TObject *Sender) {
	if (iCur <= 0)
		return;
	iCur--;
	ShowRecord();
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::ButtonNextClick(TObject *Sender) {
	if (iCur >= iMax - 1)
		return;
	iCur++;
	ShowRecord();
}

// ---------------------------------------------------------------------------

void __fastcall TForm1::ButtonChangeClick(TObject *Sender) {
	AnsiString C = EditCompany->Text;
	AnsiString A = EditAirbus->Text;
	AnsiString Co = EditCountry->Text;
	AnsiString Ci = EditCity->Text;
	AnsiString pr = EditCost->Text;
	if (C.Length() == 0 || A.Length() == 0 || Co.Length() == 0 ||
		Ci.Length() == 0 || pr.Length() == 0) {
		ShowMessage("Введите значения!");
	}
	else {
		strcpy(crew[iCur].company, ((AnsiString)EditCompany->Text).c_str());
		strcpy(crew[iCur].airbus, ((AnsiString)EditAirbus->Text).c_str());
		strcpy(crew[iCur].country, ((AnsiString)EditCountry->Text).c_str());
		strcpy(crew[iCur].city, ((AnsiString)EditCity->Text).c_str());
		crew[iCur].cost = EditCost->Text.ToIntDef(0);
		ShowMessage("Успешно изменено!");
	}

}
// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------

void __fastcall TForm1::Font1Click(TObject *Sender) {
	FontDialog1->Execute();
	Form1->Font = FontDialog1->Font;
	Bold1->Checked = False;
	Italic1->Checked = False;
	Underline1->Checked = False;
	StrikeOut1->Checked = False;
}

// ---------------------------------------------------------------------------
void __fastcall TForm1::Color1Click(TObject *Sender) {
	ColorDialog1->Execute();
	Form1->Color = ColorDialog1->Color;
	Black1->Checked = False;
	Blue1->Checked = False;
	Default1->Checked = False;
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::ButtonDeleteClick(TObject *Sender) {
	if (iMax <= 0) {
		ShowMessage("База пуста!");
		return;
	}
	if (iMax <= 1) {
		iCur = 0;
		iMax = 0;
		LabelNum->Caption = IntToStr(iCur);
		EditCompany->Text = "";
		EditAirbus->Text = "";
		EditCountry->Text = "";
		EditCity->Text = "";
		EditCost->Text = "";
		return;
	}
	if (iCur == iMax - 1) {
		iCur--;
	}
	else {
		for (int i = iCur; i < iMax - 1; i++)
			crew[i] = crew[i + 1];
	}
	iMax--;
	ShowRecord();
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::Bold1Click(TObject * Sender) {
	if (Bold1->Checked) {
		Form1->Font->Style = Form1->Font->Style << fsBold;
	}
	else
		Form1->Font->Style = Form1->Font->Style >> fsBold;
}

// ---------------------------------------------------------------------------
void __fastcall TForm1::Italic1Click(TObject * Sender) {
	if (Italic1->Checked) {
		Form1->Font->Style = Form1->Font->Style << fsItalic;
	}
	else
		Form1->Font->Style = Form1->Font->Style >> fsItalic;
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::Underline1Click(TObject * Sender) {
	if (Underline1->Checked) {
		Form1->Font->Style = Form1->Font->Style << fsUnderline;
	}
	else
		Form1->Font->Style = Form1->Font->Style >> fsUnderline;
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::StrikeOut1Click(TObject * Sender) {
	if (StrikeOut1->Checked) {
		Form1->Font->Style = Form1->Font->Style << fsStrikeOut;
	}
	else
		Form1->Font->Style = Form1->Font->Style >> fsStrikeOut;
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::Black1Click(TObject * Sender) {
	if (Black1->Checked)
		Form1->Color = clBlack;
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::Blue1Click(TObject * Sender) {
	if (Blue1->Checked)
		Form1->Color = clSkyBlue;
}

// ---------------------------------------------------------------------------
void __fastcall TForm1::Default1Click(TObject * Sender) {
	if (Default1->Checked)
		Form1->Color = clBtnFace;
}

// ---------------------------------------------------------------------------
void __fastcall TForm1::ButtonPgNextClick(TObject *Sender) {
	Form2->Show();
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::ButtonSearchClick(TObject *Sender) {
	if (EditSearch->Text.ToIntDef(0) == 0) {
		ShowMessage("Введите число!");
	}
	else {
		try {
			staff s;
			vector<staff>::iterator p;
			s.cost = EditSearch->Text.ToIntDef(0);
			p = find(crew.begin(), crew.end(), s);
			iCur = p - crew.begin();
			if (crew[iCur].cost == 0) {
				ShowMessage("Ничего не найдено!");
				iCur = 0;
			}
			else {
				ShowRecord();
			}
		}
		catch (...) {
			ShowMessage("Записи отсутствуют");
		};
	}
}
// ---------------------------------------------------------------------------

void __fastcall TForm1::ButtonSortClick(TObject *Sender) {
	AnsiString C = EditCompany->Text;
	AnsiString A = EditAirbus->Text;
	AnsiString Co = EditCountry->Text;
	AnsiString Ci = EditCity->Text;
	AnsiString pr = EditCost->Text;
	if (C.Length() == 0 || A.Length() == 0 || Co.Length() == 0 ||
		Ci.Length() == 0 || pr.Length() == 0) {
		ShowMessage("Введите значения!");
	}
	else
		sort(crew.begin(), crew.end());
	iCur = 0;
	Form1->ShowRecord();
}
// ---------------------------------------------------------------------------
